<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jayson.bms_back.dao.BookBorrowMapper" >
  <resultMap id="BaseResultMap" type="com.jayson.bms_back.pojo.BookBorrow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="book_author" property="bookAuthor" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="borrow_days" property="borrowDays" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="borrow_time" property="borrowTime" jdbcType="BIGINT" />
    <result column="back_time" property="backTime" jdbcType="BIGINT" />
    <result column="real_back_time" property="realBackTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, user_name, book_id, book_author, book_name, count, borrow_days, state, 
    borrow_time, back_time, real_back_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jayson.bms_back.pojo.BookBorrowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book_borrow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book_borrow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jayson.bms_back.pojo.BookBorrowExample" >
    delete from book_borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jayson.bms_back.pojo.BookBorrow" >
    insert into book_borrow (id, user_id, user_name, 
      book_id, book_author, book_name, 
      count, borrow_days, state, 
      borrow_time, back_time, real_back_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{bookId,jdbcType=INTEGER}, #{bookAuthor,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{count,jdbcType=INTEGER}, #{borrowDays,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{borrowTime,jdbcType=BIGINT}, #{backTime,jdbcType=BIGINT}, #{realBackTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jayson.bms_back.pojo.BookBorrow" >
    insert into book_borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="bookAuthor != null" >
        book_author,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="borrowDays != null" >
        borrow_days,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="borrowTime != null" >
        borrow_time,
      </if>
      <if test="backTime != null" >
        back_time,
      </if>
      <if test="realBackTime != null" >
        real_back_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookAuthor != null" >
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="borrowDays != null" >
        #{borrowDays,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="borrowTime != null" >
        #{borrowTime,jdbcType=BIGINT},
      </if>
      <if test="backTime != null" >
        #{backTime,jdbcType=BIGINT},
      </if>
      <if test="realBackTime != null" >
        #{realBackTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jayson.bms_back.pojo.BookBorrowExample" resultType="java.lang.Integer" >
    select count(*) from book_borrow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book_borrow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookAuthor != null" >
        book_author = #{record.bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null" >
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.borrowDays != null" >
        borrow_days = #{record.borrowDays,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.borrowTime != null" >
        borrow_time = #{record.borrowTime,jdbcType=BIGINT},
      </if>
      <if test="record.backTime != null" >
        back_time = #{record.backTime,jdbcType=BIGINT},
      </if>
      <if test="record.realBackTime != null" >
        real_back_time = #{record.realBackTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book_borrow
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      book_author = #{record.bookAuthor,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      borrow_days = #{record.borrowDays,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      borrow_time = #{record.borrowTime,jdbcType=BIGINT},
      back_time = #{record.backTime,jdbcType=BIGINT},
      real_back_time = #{record.realBackTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jayson.bms_back.pojo.BookBorrow" >
    update book_borrow
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookAuthor != null" >
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="borrowDays != null" >
        borrow_days = #{borrowDays,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="borrowTime != null" >
        borrow_time = #{borrowTime,jdbcType=BIGINT},
      </if>
      <if test="backTime != null" >
        back_time = #{backTime,jdbcType=BIGINT},
      </if>
      <if test="realBackTime != null" >
        real_back_time = #{realBackTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jayson.bms_back.pojo.BookBorrow" >
    update book_borrow
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      book_author = #{bookAuthor,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      borrow_days = #{borrowDays,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      borrow_time = #{borrowTime,jdbcType=BIGINT},
      back_time = #{backTime,jdbcType=BIGINT},
      real_back_time = #{realBackTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>