<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jayson.bms_back.dao.BookBorrowCountMapper">
    <resultMap id="BaseResultMap" type="com.jayson.bms_back.pojo.BookBorrowCount">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="book_id" property="bookId" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, book_id, count
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.jayson.bms_back.pojo.BookBorrowCountExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from book_borrow_count
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from book_borrow_count
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_borrow_count
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.jayson.bms_back.pojo.BookBorrowCountExample">
        delete from book_borrow_count
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jayson.bms_back.pojo.BookBorrowCount">
    insert into book_borrow_count (id, book_id, count
      )
    values (#{id,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.jayson.bms_back.pojo.BookBorrowCount">
        insert into book_borrow_count
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookId != null">
                book_id,
            </if>
            <if test="count != null">
                count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookId != null">
                #{bookId,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jayson.bms_back.pojo.BookBorrowCountExample"
            resultType="java.lang.Integer">
        select count(*) from book_borrow_count
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update book_borrow_count
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.bookId != null">
                book_id = #{record.bookId,jdbcType=INTEGER},
            </if>
            <if test="record.count != null">
                count = #{record.count,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update book_borrow_count
        set id = #{record.id,jdbcType=INTEGER},
        book_id = #{record.bookId,jdbcType=INTEGER},
        count = #{record.count,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jayson.bms_back.pojo.BookBorrowCount">
        update book_borrow_count
        <set>
            <if test="bookId != null">
                book_id = #{bookId,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jayson.bms_back.pojo.BookBorrowCount">
    update book_borrow_count
    set book_id = #{bookId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!--统计借阅数量前五的图书-->

    <resultMap id="dataResultMap" type="com.jayson.bms_back.pojo.BookBorrowCount">
        <id property="id" column="id"></id>
        <result property="count" column="count"/>
        <association property="book" javaType="com.jayson.bms_back.pojo.Book">
            <id property="id" column="id"></id>
            <result property="name" column="name"/>
            <result property="author" column="author"/>
            <result property="type" column="type"/>
            <result property="publishHouse" column="publish_house"/>
            <result property="number" column="number"/>
            <result property="price" column="price"/>
        </association>
    </resultMap>
    <select id="getData" resultMap="dataResultMap" >
    select
    a.id, a.count,b.name,b.author,b.type,b.publish_house,b.number,b.price
    from book_borrow_count a join book b on a.book_id = b.id
    order by a.count desc
    limit 0,5
  </select>
</mapper>
